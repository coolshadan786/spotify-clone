{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\React\\\\Work\\\\Demo\\\\Clone\\\\spotify_clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  // const [token, setToken] = useState(initialState);\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue(); //Run code based on a given condition\n\n  useEffect(() => {\n    //Code...\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        user: _token\n      }); // setToken(_token);\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists\n        });\n      });\n    }\n\n    console.log('I have a Token :', token);\n  }, []);\n  console.log('USER :', user);\n  console.log('TOKEN :', token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"foik8K8A62p+aotmH1sMm8vTMMQ=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Codes/React/Work/Demo/Clone/spotify_clone/src/App.js"],"names":["React","useState","useEffect","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AACA,SAASI,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BL,iBAAiB,EAArD,CAFa,CAGb;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,IAAI,GAAGT,eAAe,EAA5B;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPR,QAAAA,IAAI,EAAEM;AAFC,OAAD,CAAR,CADU,CAKV;;AACAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB;AACAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAsBX,IAAD,IAAU;AAC7BE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OALD;AAMAF,MAAAA,OAAO,CAACc,gBAAR,GAA2BD,IAA3B,CAAiCE,SAAD,IAAe;AAC7CX,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPK,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OALD;AAMD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,KAAhC;AACD,GA1BQ,EA0BN,EA1BM,CAAT;AA2BAa,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBf,IAAtB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBd,KAAvB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBA,KAAK,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnCQF,G;UAE6BF,iB;;;KAF7BE,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  // const [token, setToken] = useState(initialState);\n  const [{ user, token }, dispatch] = useDataLayerValue();\n  //Run code based on a given condition\n  useEffect(() => {\n    //Code...\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        user: _token,\n      });\n      // setToken(_token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists,\n        });\n      });\n    }\n    console.log('I have a Token :', token);\n  }, []);\n  console.log('USER :', user);\n  console.log('TOKEN :', token);\n\n  return <div className=\"App\">{token ? <Player /> : <Login />}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}